// Place all the styles related to the tags controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/

.tag1
	font-size: 1.0em
	color: #64acef
.tag2
	font-size: 1.2em
	color: #64acef
.tag3
	font-size: 1.4em
	color: #64acef
.tag4
	font-size: 1.6em
	color: #64acef
.tag5
	font-size: 1.8em
	color: #64acef


++++++++++++++++++++++++++++++++++++++++++

class TagsController < ApplicationController
	def show
		@tag = Tag.find_by(name: params[:id])
    	@posts = @tag.posts
	end
end

++++++++++++++++++++++++++++++++++++++++++

class Tag < ApplicationRecord
	has_many :taggings
	has_many :posts, through: :taggings

	def self.counts
		self.select("name, count(taggings.tag_id) as count").joins(:taggings).group("taggings.tag_id")
	end
	
end

++++++++++++++++++++++++++++++++++++++++++

class Tagging < ApplicationRecord
  belongs_to :post
  belongs_to :tag
end


++++++++++++++++++++++++++++++++++++++++++

<h1><%= @tag.name %></h1>

<% if @tag.posts.empty? %>
	<h2>Немає статей</h2>
<% else %>
	<%= render @tag.posts %>
<% end %>

++++++++++++++++++++++++++++++++++++++++++


	<div class="form-group">
		<%= f.label :all_tags %>
		<%= f.text_field :all_tags, class: 'form-control' %>
	</div>


++++++++++++++++++++++++++++++++++++++++++

	<section class="footer-summary">
		<%= raw post.tags.map(&:name).map{ |t| link_to t, tag_path(t), class: 'badge badge-primary' }.join(' ') %>
	</section>


++++++++++++++++++++++++++++++++++++++++++


module PostsHelper
	def tag_cloud(tags, classes)
		max = tags.sort_by(&:count).last
		tags.each do |tag|
			index = tag.count.to_f / max.count * (classes.size-1)
			yield(tag, classes[index.round])
		end
	end
end


